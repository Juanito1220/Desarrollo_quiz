{
  "quizzes": [
    {
      "title": "week4",
      "questions": [
        {
          "index": 1,
          "question": "Señala la respuesta incorrecta. Con respecto a los errores y excepciones:",
          "options": [
            "Si un método declara que lanza una excepción checked, todos los objetos que lo utilizan deben manejar la excepción o declarar que lo lanzan también.",
            "Los compiladores de Java no hacen cumplir las reglas en cuanto a excepciones checked.",
            "Todas las excepciones en C++ son checked.",
            "Las excepciones unchecked no tienen que ser declaradas o manejadas."
          ],
          "correct": "Todas las excepciones en C++ son checked."
        },
        {
          "index": 2,
          "question": "¿Qué tipo de vulnerabilidad se comete en este código? public ResultSet execSQL(...) { stmt.executeQuery(sql); ... }",
          "options": [
            "Integer overflows",
            "Desbordamiento de buffer",
            "Format string",
            "Manipulación de información privada"
          ],
          "correct": "Manipulación de información privada"
        },
        {
          "index": 3,
          "question": "Señala la respuesta correcta. Se tienen dos opciones para crear archivos temporales de forma segura:",
          "options": [
            "Generar los nombres de archivo temporales que sean difíciles de adivinar, usando un generador de números pseudo-aleatorios (PRNG) criptográficamente seguros para crear un elemento aleatorio en cada nombre del archivo temporal.",
            "Almacenar los archivos temporales bajo un directorio no accesible públicamente.",
            "Almacenar los archivos temporales bajo un directorio público.",
            "Generar nombres difíciles de adivinar usando un PRNG estadístico."
          ],
          "correct": "Generar los nombres de archivo temporales que sean difíciles de adivinar, usando un generador de números pseudo-aleatorios (PRNG) criptográficamente seguros para crear un elemento aleatorio en cada nombre del archivo temporal."
        },
        {
          "index": 4,
          "question": "Señala la respuesta incorrecta. Métodos para detectar y prevenir integers overflows:",
          "options": [
            "Usar tipos sin signo.",
            "Verificar el tipo de los buffers.",
            "Restringir la entrada numérica de usuario.",
            "Entender las reglas de conversión entre enteros."
          ],
          "correct": "Verificar el tipo de los buffers."
        },
        {
          "index": 5,
          "question": "Señala la respuesta incorrecta.  Los ataques de escalada de privilegios pueden tener como objetivo cualquier variedad de vulnerabilidades de software, que son principalmente un riesgo en programas privilegiados:",
          "options": [
            "Archivos de sistema",
            "Condiciones de carrera de acceso a archivos",
            "Inyección de comandos",
            "Mal uso de descriptores de archivo estándar"
          ],
          "correct": "Archivos de sistema"
        },
        {
          "index": 6,
          "question": "Señala la respuesta incorrecta. Consideraciones sobre potenciales vulnerabilidades de Java:",
          "options": [
            "Seguridad de tipos. Los campos que son declarados privados o protegidos, o que tienen protección, por defecto, deberían ser públicamente accesibles.",
            "Campos públicos. Un campo que es declarado público directamente puede ser no ser accedido por cualquier parte de un programa Java y puede ser modificado por las mismas (a no ser que el campo sea declarado como final).",
            "Serialización. Esta facilidad posibilita que el estado del programa sea capturado y convertido en un byte stream que puede ser restaurado por la operación inversa, que es la deserialización.",
            " JVM. La JVM, en sí misma, a menudo está escrita en C para una plataforma dada. Esto quiere decir que, sin la atención cuidadosa a detalles de puesta en práctica, la JVM en sí misma no susceptible a problemas de desbordamiento."
          ],
          "correct": "Campos públicos. Un campo que es declarado público directamente puede ser no ser accedido por cualquier parte de un programa Java y puede ser modificado por las mismas (a no ser que el campo sea declarado como final)."
        },
        {
          "index": 7,
          "question": "Señala la respuesta correcta. Revisando el programa ¿cuál de las siguientes preguntas describe mejor lo que está haciendo la función? void aFunction(char *buf) {static char BANNED CHARACTERS[] = {'>, '<', ! int 1 = strlen(buf);int i;for(i = 0; i <l; i++) {int j;int k = sizeof(BANNED_CHARACTERS)/sizeof(char);for(j = 0; j<k; j++) {if(buf[i] == BANNED_CHARACTERS[j])buf[i] = '';}}",
          "options": [
            "Asegurar la no violabilidad espacial de la memoria",
            "Validar la entrada mediante lista blanca",
            "Asegurar la no violabilidad temporal de la memoria",
            "Validar la entrada mediante lista negra"
          ],
          "correct": "Validar la entrada mediante lista negra"
        },
        {
          "index": 8,
          "question": "Señala la incorrecta. Las funciones de strings limitadas son más seguras que las funciones ilimitadas, pero hay todavía mucho margen para el error. Los fallos de programación más comunes que se pueden cometer con las funciones de string limitadas:",
          "options": [
            "El buffer de destino se desborda porque el límite depende del tamaño de los datos de la fuente, más bien que del tamaño del buffer de destino.",
            "El buffer de destino se desborda porque su límite se especifica como el tamaño total del buffer, más bien que como el espacio restante.",
            "El buffer de destino se deja sin terminador nulo.",
            "El programa escribe a una posición arbitraria en la memoria porque el buffer de destino se termina con el carácter nulo."
          ],
          "correct": "El programa escribe a una posición arbitraria en la memoria porque el buffer de destino se termina con el carácter nulo."
        },
        {
          "index": 9,
          "question": "¿Qué tipo de vulnerabilidad se comete en este código con fopen('/tmp/file.tmp')?",
          "options": [
            "Integer overflows",
            "Desbordamiento de buffer",
            "Condiciones de carrera",
            "Use after free"
          ],
          "correct": "Condiciones de carrera"
        },
        {
          "index": 10,
          "question": "¿Cuándo ocurre un ataque de integer overflow?",
          "options": [
            "Al realizar una resta",
            "Un entero es usado como puntero",
            "Un entero es usado para acceder a un buffer fuera de sus límites",
            "No hay espacio para almacenar un entero"
          ],
          "correct": "Un entero es usado para acceder a un buffer fuera de sus límites"
        }
      ]
    }
  ]
}
